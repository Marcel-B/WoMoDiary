// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WoMoDiary.BackEnd;

namespace WoMoDiary.BackEnd.Migrations
{
    [DbContext(typeof(WoMoContext))]
    partial class WoMoContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.3-rtm-32065")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WoMoDiary.Domain.Place", b =>
                {
                    b.Property<Guid>("PlaceId")
                        .ValueGeneratedOnAdd();

                    b.Property<double>("Altitude");

                    b.Property<string>("AssetName");

                    b.Property<DateTimeOffset>("Created");

                    b.Property<string>("Description");

                    b.Property<DateTimeOffset>("LastEdit");

                    b.Property<double>("Latitude");

                    b.Property<double>("Longitude");

                    b.Property<string>("Name");

                    b.Property<short>("Rating");

                    b.Property<Guid>("TripId");

                    b.Property<int>("Type");

                    b.HasKey("PlaceId");

                    b.HasIndex("TripId");

                    b.ToTable("Places");
                });

            modelBuilder.Entity("WoMoDiary.Domain.Trip", b =>
                {
                    b.Property<Guid>("TripId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTimeOffset>("Created");

                    b.Property<string>("Description");

                    b.Property<DateTimeOffset?>("LastEdit");

                    b.Property<string>("Name");

                    b.Property<Guid>("UserId");

                    b.HasKey("TripId");

                    b.HasIndex("UserId");

                    b.ToTable("Trips");
                });

            modelBuilder.Entity("WoMoDiary.Domain.User", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTimeOffset>("Created");

                    b.Property<string>("Email");

                    b.Property<byte[]>("Hash");

                    b.Property<DateTimeOffset>("LastEdit");

                    b.Property<string>("Name");

                    b.Property<byte[]>("Salt");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("WoMoDiary.Domain.Place", b =>
                {
                    b.HasOne("WoMoDiary.Domain.Trip", "Trip")
                        .WithMany("Places")
                        .HasForeignKey("TripId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WoMoDiary.Domain.Trip", b =>
                {
                    b.HasOne("WoMoDiary.Domain.User", "User")
                        .WithMany("Trips")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
